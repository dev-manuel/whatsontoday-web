->     /events                         events.Routes

->     /user                           user.Routes

###
#  summary: Query all categories
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/whatson.model.Category'
###
GET    /categories                     controllers.CategoryController.categories

###
#  summary: Search locations by name
#  parameters:
#  - in: header
#    name: X-Page
#    schema:
#      type: integer
#  - in: header
#    name: X-Page-Size
#    schema:
#      type: integer
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/whatson.model.Location'
###
GET    /location                       controllers.LocationController.searchLocations(search: Option[String])

###
#  summary: Get a specific location
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/whatson.model.Location'
###
GET    /location/:id                   controllers.LocationController.getLocation(id: Int)

###
#  summary: Get locations nearby a specific location
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/whatson.model.Location'
###
GET    /location/nearby/:id            controllers.LocationController.getNearby(id: Int)

###
#  summary: Create a location
#  parameters:
#    - name: body
#      schema:
#        $ref: '#/definitions/whatson.model.Location'
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/whatson.model.Location'
###
POST   /location                       controllers.LocationController.createLocation()

###
#  summary: Rate a specific entity
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/whatson.model.Rating'
###
GET    /rating/:id/:entityType/:rate   controllers.RatingController.rateEntity(id: Int, entityType: Int, rate: Float)