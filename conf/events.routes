###
#  summary: Query all events by name, location, categories
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/whatson.model.Event'
###
GET      /   controllers.EventController.searchEvents(search: Option[String], location: Option[Int], category: Option[Int])

###
#  summary: Query the event with a specific id
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/whatson.model.Event'
###
GET      /:id                         controllers.EventController.getEvent(id: Int)

###
#  summary: Delete an event
#  responses:
#    200:
#      description: Event deleted
###
DELETE   /:id                         controllers.EventController.deleteEvent(id: Int)

###
#  summary: Create an event
#  parameters:
#    - name: body
#      schema:
#        $ref: '#/definitions/whatson.model.Event'
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/whatson.model.Event'
###
POST     /                            controllers.EventController.createEvent

###
#  summary: Update an event with a specific id
#  parameters:
#    - name: body
#      schema:
#        $ref: '#/definitions/whatson.model.Event'
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/whatson.model.Event'
###
PUT      /:id                         controllers.EventController.updateEvent(id: Int)